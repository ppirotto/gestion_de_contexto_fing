package edu.fing.drools;
import java.util.HashMap;


declare UserLocation
@role(event)
	lat:	long
	lon:	long
	userId:	String
end

declare InCity
@role(event)
	city:	String
	userId:	String
end

declare CityWeather
@role(event)
	city:	String
	raining:boolean
end

rule "UserLocationMessageMapper"
when
    message:HashMap(this["type"] == "USER_LOCATION")
then
    System.out.println("Mapping message to UserLocation...");
	String body = (String)message.get("body");
	UserLocation usrLoc = new UserLocation();
	String[] split = body.split(",");
	usrLoc.setLat(Long.parseLong(split[0]));
	usrLoc.setLon(Long.parseLong(split[1]));
	usrLoc.setUserId(split[2]);
	insert(usrLoc);    
end


rule "User in City, new"
when
    usrLoc:UserLocation()
    not (exists InCity(userId==usrLoc.userId))
then
    System.out.println("UserLocation received NEW... userId= " + usrLoc.getUserId());
	InCity usrCity = new InCity();
	usrCity.setCity("CUIDAD 1");
	usrCity.setUserId(usrLoc.getUserId());
	insert(usrCity);    
end

rule "User in City, update"
no-loop true
when
    usrLoc:UserLocation()
    usrInCity:InCity(userId==usrLoc.userId)
then
    System.out.println("UserLocation received UPDATE... userId= " + usrLoc.getUserId());
	usrInCity.setCity("CUIDAD 1");
	update(usrInCity);    
end


rule "User in City Raining"
when
    usrInCity:InCity()
    CityWeather (city == usrInCity.city, raining == true) over window:time( 30m )
then
    System.out.println("UserInCity RAINING!!! userId= " + usrInCity.getUserId() + "city= " + usrInCity.getCity() + "  ---  NOTIFICAR CONTEXT REASONER!!!!!");
    ContextReasonerNotification notif = new ContextReasonerNotification();
    notif.setSituationName("UserInCityRaining");
    notif.setUserId(usrInCity.getUserId());
    HashMap<String,String> contextualData = new HashMap<String,String>();
    contextualData.put("city",usrInCity.getCity());
    notif.setContextualData(contextualData);
    System.out.println("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
	insert(notif);
end

